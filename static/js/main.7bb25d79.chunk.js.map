{"version":3,"sources":["logic/logicTypes.ts","actions/sortAction.ts","reducers/sortingReducer.ts","reducers/tableTypeReducer.ts","actions/filterAction.ts","reducers/filterReducer.ts","reducers/columnVisibilityReducer.ts","reducers/rowSelectionReducer.ts","reducers/rootReducer.ts","actions/tableTypeAction.ts","actions/columnVisibility.ts","actions/rowsSelect.ts","store.ts","logic/dataGenerator.ts","components/Table/headerCell.tsx","containers/header.tsx","components/Table/Cells/cell.tsx","components/Table/Cells/numberCell.tsx","components/Table/Cells/stringCell.tsx","components/Table/Cells/dateTimeCell.tsx","components/Table/Cells/objectCell.tsx","components/Table/Cells/booleanCell.tsx","components/Table/Cells/enumCell.tsx","components/Table/Cells/CheckboxCell.tsx","containers/bodyRow.tsx","containers/bodyContainer.tsx","containers/virtualTable.tsx","containers/simpleTable.tsx","logic/filterLogic.ts","logic/sortLogic.ts","logic/filterSortLogic.ts","containers/tableContainerValues.ts","containers/tableContainer.tsx","components/switcher.tsx","components/radiobutton.tsx","containers/booleanFilter.tsx","components/selectBlock.tsx","components/checkbox.tsx","containers/filterContainer.tsx","App.tsx","index.tsx"],"names":["ColumnsEnum","addSorting","type","sorting","order","setSorting","initialState","Map","isVirtual","addBooleanFilter","filter","filterValue","stringFilter","enumFilter","columnsPosition","Set","columnName","selectedRows","rootReducer","combineReducers","state","action","set","filters","booleanFilter","nextState","tableType","columnVisibility","add","columnPosition","newColumnsPosition","delete","newColumnName","rowSelection","rowNumber","newSelectedRow","store","createStore","composeWithDevTools","applyMiddleware","enumData","generateData","result","i","faker","seed","record","number","name","prefix","firstName","lastName","birth","date","past","toString","city","address","zipCode","streetAddress","phoneNum","phone","phoneNumberFormat","email","internet","doArray","j","random","min","max","push","arrayElement","do","bool","boolean","deposit","currency","finance","currencySymbol","value","Number","parseInt","account","loan","interestRate","parseFloat","amount","useStyles","makeStyles","root","props","width","cursor","userSelect","outline","backgroundColor","display","alignItems","justifyContent","padding","arrowBlock","flexDirection","alignContent","fontSize","color","marginLeft","height","fill","HeaderCell","label","reduxKey","className","dispatch","useDispatch","classes","val","useState","sortValue","setSortValue","sortState","useSelector","useEffect","currentSortValue","get","undefined","reduxSortOrder","indexOf","clickHandler","e","shiftKey","nextValue","length","onClick","onKeyPress","role","tabIndex","viewBox","focusable","d","Header","columns","rowHeight","translatedClasses","style","position","top","zIndex","row","map","column","key","id","minWidth","Cell","styled","borderRight","borderBottom","background","StyledNumberCell","textAlign","NumberCell","newValue","toLocaleString","StyledStringCell","whiteSpace","overflow","textOverflow","StringCell","DateTimeCell","dateObj","Date","month","getMonth","slice","day","getDate","year","getFullYear","flex","ObjectCell","meaning","StyledBooleanCell","paddingTop","BooleanCell","cx","cy","r","StyledEnumCell","EnumCell","join","CheckboxCell","BodyRow","data","checkboxCallback","isShift","onKeyDown","check","BodyContainer","rows","styles","selectedRowsState","has","selectMultipleRow","selectSingleRow","visibleRows","useMemo","rowData","VirtualTable","viewportHeight","rowsCount","totalHeight","scrollTop","setScrollTop","ref","useRef","onScroll","requestAnimationFrame","target","current","scrollContainer","addEventListener","removeEventListener","useScrollAware","startNode","Math","floor","visibleNodesCount","ceil","offsetY","Array","_","index","table","willChange","transform","SimpleTable","filtering","stringColumns","enumColumns","booleanColumns","toLowerCase","includes","columnValue","sortingRules","dynamicSort","property","obj1","obj2","keys","values","sortedData","sort","propsCount","multipleSorting","filterSortLogic","columnId","maxHeight","gridTemplateColumns","gridColumnsSize","left","hiddenColumn","CHECK","tabindex","NUMBER","NAME","BIRTH","CITY","ADDRESS","PHONE_NUM","EMAIL","DO","BOOL","DEPOSIT","LOAN","INTEREST_RATE","columnTypes","TableContainer","setRows","initialRow","setInitialRows","visibleTable","setVisibleTable","setHiddenColumn","setGridColumnsSize","columnState","columnsSize","reduce","accumulator","tableData","filterState","sortingState","resultRows","switch","slider","right","bottom","borderRadius","transition","content","input","opacity","boxShadow","Switcher","callback","isChecked","checked","onChange","RadioButton","BooleanFilter","radioStates","radioCallback","NONE","TRUE","booleanFilterState","filterChecked","setFilterChecked","FALSE","animatedComponents","makeAnimated","SelectBlock","selected","setSelected","options","stateValue","JSON","stringify","components","selectedOptions","enumFilters","option","isMulti","Checkbox","checkedLabels","FilterContainer","setStringFilter","isVirtualTable","setIsVirtualTable","checkedColumns","setCheckedColumns","tableTypeState","newCheckedColumnsState","item","showColumn","main","App","prototype","toJSON","from","this","parse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bb25d79.chunk.js","sourcesContent":["import { StateTypes as SortingTypes } from '../reducers/sortingReducer';\nimport { StateType as FilterTypes } from '../reducers/filterReducer';\n\nexport enum ColumnsEnum {\n  stringColumns = 'stringColumns',\n  enumColumns = 'enumColumns',\n  booleanColumns = 'booleanColumns',\n}\n\ninterface ColumnsType {\n  [ColumnsEnum.stringColumns]: string[];\n  [ColumnsEnum.enumColumns]: string[];\n  [ColumnsEnum.booleanColumns]: string[];\n}\n\nexport type RowType = Record<string, any>;\n\ninterface PropsDataInterface {\n  data: RowType[];\n}\n\nexport interface SortingPropsType extends SortingTypes, PropsDataInterface {}\n\nexport interface FilterPropsType extends PropsDataInterface{\n  filters: FilterTypes;\n  columns: ColumnsType;\n}\n\nexport interface FilterSortType extends FilterPropsType, SortingPropsType {}\n\nexport interface MultipleSortingType {\n  keys: string[];\n  values: string[];\n}\n","export const ADD_SORTING = 'ADD_SORTING';\nexport const SET_SORTING = 'SET_SORTING';\n\nexport interface SortingType {\n  sorting: string;\n  order: string;\n}\n\nexport interface ActionType extends SortingType {\n  type: string;\n}\n\nexport const addSorting = ({ sorting, order }: SortingType): ActionType => (\n  {\n    type: ADD_SORTING,\n    sorting,\n    order,\n  }\n);\n\nexport const setSorting = ({ sorting, order }: SortingType): ActionType => (\n  {\n    type: SET_SORTING,\n    sorting,\n    order,\n  }\n);\n","import { ADD_SORTING, SET_SORTING, ActionType } from '../actions/sortAction';\n\n\nexport interface StateTypes {\n  sorting: Map<string, string>;\n}\n\nexport const initialState: StateTypes = {\n  sorting: new Map(),\n};\n\nexport const sortingReducer = (state = initialState, action: ActionType): StateTypes => {\n  switch (action.type) {\n    case SET_SORTING:\n      return {\n        sorting: new Map().set(action.sorting, action.order),\n      };\n    case ADD_SORTING:\n      return {\n        sorting: new Map(state.sorting).set(action.sorting, action.order),\n      };\n    default:\n      return state;\n  }\n};\n","import { SET_TABLE_TYPE, ActionType, TableType } from '../actions/tableTypeAction';\n\nexport const initialState: TableType = {\n  isVirtual: false,\n};\n\nexport const changeTableType = (state = initialState, action: ActionType) => {\n  switch (action.type) {\n    case SET_TABLE_TYPE:\n      return {\n        isVirtual: action.isVirtual,\n      };\n    default:\n      return state;\n  }\n};\n","export const ADD_STRING_FILTER = 'ADD_STRING_FILTER';\nexport const ADD_ENUM_FILTER = 'ADD_ENUM_FILTER';\nexport const ADD_BOOLEAN_FILTER = 'ADD_BOOLEAN_FILTER';\nexport const RESET_BOOLEAN_FILTER = 'RESET_BOOLEAN_FILTER';\nexport const RESET_FILTER = 'RESET_FILTER';\n\nexport interface StringFilterType {\n  filterValue: string;\n}\n\nexport interface EnumFilterType {\n  filterValue: string[];\n}\n\nexport interface BooleanFilterType {\n  filterValue: boolean;\n}\n\nexport interface ActionType {\n  type: string;\n  filter: any;\n}\n\nexport const addStringFilter = ({ filterValue }: StringFilterType): ActionType => (\n  {\n    type: ADD_STRING_FILTER,\n    filter: filterValue,\n  }\n);\n\nexport const addEnumFilter = ({ filterValue }: EnumFilterType): ActionType => (\n  {\n    type: ADD_ENUM_FILTER,\n    filter: filterValue,\n  }\n);\n\nexport const addBooleanFilter = ({ filterValue }: BooleanFilterType): ActionType => (\n  {\n    type: ADD_BOOLEAN_FILTER,\n    filter: filterValue,\n  }\n);\n\nexport const removeBooleanFilter = (): ActionType => (\n  {\n    type: RESET_BOOLEAN_FILTER,\n    filter: null,\n  }\n);\n\nexport const resetFilter = (): ActionType => (\n  {\n    type: RESET_FILTER,\n    filter: null,\n  }\n);\n","import {\n  ADD_BOOLEAN_FILTER,\n  RESET_BOOLEAN_FILTER,\n  ADD_ENUM_FILTER,\n  ADD_STRING_FILTER,\n  RESET_FILTER,\n  ActionType,\n} from '../actions/filterAction';\n\nexport interface StateType {\n  stringFilter: string;\n  enumFilter: string[];\n  booleanFilter?: boolean;\n}\n\nexport const initialState: StateType = {\n  stringFilter: '',\n  enumFilter: [],\n};\n\nexport const filterReducer = (state = initialState, action: ActionType): StateType => {\n  switch (action.type) {\n    case ADD_BOOLEAN_FILTER:\n      return {\n        ...state,\n        booleanFilter: action.filter,\n      };\n    case RESET_BOOLEAN_FILTER: {\n      const nextState = { ...state };\n      delete nextState.booleanFilter;\n      return nextState;\n    }\n    case ADD_ENUM_FILTER:\n      return {\n        ...state,\n        enumFilter: action.filter,\n      };\n    case ADD_STRING_FILTER:\n      return {\n        ...state,\n        stringFilter: action.filter,\n      };\n    case RESET_FILTER:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { HIDE_COLUMN, SHOW_COLUMN, ActionType } from '../actions/columnVisibility';\n\nexport interface StateType {\n  columnsPosition: Set<number>;\n  columnName: Set<string>;\n}\n\nexport const initialState: StateType = {\n  columnsPosition: new Set(),\n  columnName: new Set(),\n};\n\nexport const columnVisibilityReducer = (state = initialState, action: ActionType): StateType => {\n  switch (action.type) {\n    case HIDE_COLUMN:\n      return {\n        columnsPosition: new Set([...state.columnsPosition]).add(action.columnPosition),\n        columnName: new Set([...state.columnName]).add(action.columnName),\n      };\n    case SHOW_COLUMN: {\n      const newColumnsPosition = new Set([...state.columnsPosition]);\n      newColumnsPosition.delete(action.columnPosition);\n      const newColumnName = new Set([...state.columnName]);\n      newColumnName.delete(action.columnName);\n      return {\n        columnsPosition: newColumnsPosition,\n        columnName: newColumnName,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  SELECT_MULTIPLE_ROW, SELECT_SINGLE_ROW, UNSELECT_ROW, ActionType,\n} from '../actions/rowsSelect';\n\nexport interface StateType {\n  selectedRows: Set<number>;\n}\n\nexport const initialState: StateType = {\n  selectedRows: new Set(),\n};\n\nexport const rowSelectionReducer = (state = initialState, action: ActionType): StateType => {\n  switch (action.type) {\n    case SELECT_SINGLE_ROW:\n      return {\n        selectedRows: new Set([action.rowNumber]),\n      };\n    case SELECT_MULTIPLE_ROW:\n      return {\n        selectedRows: new Set([...state.selectedRows]).add(action.rowNumber),\n      };\n    case UNSELECT_ROW: {\n      const newSelectedRow = new Set([...state.selectedRows]);\n      newSelectedRow.delete(action.rowNumber);\n      return {\n        selectedRows: newSelectedRow,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport { sortingReducer } from './sortingReducer';\nimport { changeTableType } from './tableTypeReducer';\nimport { filterReducer } from './filterReducer';\nimport { columnVisibilityReducer } from './columnVisibilityReducer';\nimport { rowSelectionReducer } from './rowSelectionReducer';\n\nconst rootReducer = combineReducers({\n  sorting: sortingReducer,\n  filters: filterReducer,\n  tableType: changeTableType,\n  columnVisibility: columnVisibilityReducer,\n  rowSelection: rowSelectionReducer,\n});\n\nexport default rootReducer;\n","export const SET_TABLE_TYPE = 'SET_TABLE_TYPE';\n\nexport interface TableType {\n  isVirtual: boolean;\n}\n\nexport interface ActionType extends TableType{\n  type: string;\n}\n\nexport const setTableType = ({ value }: {value: boolean}): ActionType => (\n  {\n    type: SET_TABLE_TYPE,\n    isVirtual: value,\n  }\n);\n","export const SHOW_COLUMN = 'SHOW_COLUMN';\nexport const HIDE_COLUMN = 'HIDE_COLUMN';\n\nexport interface ShowHideColumnType {\n  columnPosition: number;\n  columnName: string;\n}\n\nexport interface ActionType extends ShowHideColumnType {\n  type: string;\n}\n\nexport const showColumn = ({ columnPosition, columnName }: ShowHideColumnType): ActionType => (\n  {\n    type: SHOW_COLUMN,\n    columnPosition,\n    columnName,\n  }\n);\n\nexport const hideColumn = ({ columnPosition, columnName }: ShowHideColumnType): ActionType => (\n  {\n    type: HIDE_COLUMN,\n    columnPosition,\n    columnName,\n  }\n);\n","export const SELECT_SINGLE_ROW = 'SELECT_SINGLE_ROW';\nexport const SELECT_MULTIPLE_ROW = 'SELECT_MULTIPLE_ROW';\nexport const UNSELECT_ROW = 'UNSELECT_ROW';\n\nexport interface SelectUnselectRowType {\n  rowNumber: number;\n}\n\nexport interface ActionType extends SelectUnselectRowType {\n  type: string;\n}\n\nexport const selectSingleRow = ({ rowNumber }: SelectUnselectRowType): ActionType => (\n  {\n    type: SELECT_SINGLE_ROW,\n    rowNumber,\n  }\n);\n\nexport const selectMultipleRow = ({ rowNumber }: SelectUnselectRowType): ActionType => (\n  {\n    type: SELECT_MULTIPLE_ROW,\n    rowNumber,\n  }\n);\n\nexport const unselectRow = ({ rowNumber }: SelectUnselectRowType): ActionType => (\n  {\n    type: UNSELECT_ROW,\n    rowNumber,\n  }\n);\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(),\n  ),\n);\n\nexport default store;\n","import faker from 'faker';\n\nimport { RowType, MoneyType } from '../types/rowType';\n\nexport const enumData = ['Yes', 'No', 'Maybe'];\n\nconst generateData = (): RowType[] => {\n  const seed = 154311666;\n  const recordsCount = 1000;\n  const datePast = 4;\n\n  const result: RowType[] = [];\n\n  for (let i = 0; i < recordsCount; i += 1) {\n    faker.seed(seed + i);\n    const record = {} as RowType;\n    record.number = i + 1;\n    record.name = `${faker.name.prefix()} ${faker.name.firstName()} ${faker.name.lastName()}`;\n    record.birth = faker.date.past(datePast).toString();\n    record.city = `${faker.address.city()}, ${faker.address.zipCode()}`;\n    record.address = faker.address.streetAddress(true);\n    record.phoneNum = faker.phone.phoneNumberFormat();\n    record.email = faker.internet.email();\n    const doArray = [];\n    for (let j = 0; j < faker.random.number({ min: 1, max: 2 }); j += 1) {\n      doArray.push(faker.random.arrayElement(enumData));\n    }\n    record.do = doArray;\n    record.bool = faker.random.boolean();\n    record.deposit = {\n      currency: faker.finance.currencySymbol(),\n      value: Number.parseInt(faker.finance.account(), 10),\n    } as MoneyType;\n    record.loan = {\n      currency: faker.finance.currencySymbol(),\n      value: Number.parseInt(faker.finance.account(), 10),\n    } as MoneyType;\n    record.interestRate = Number.parseFloat(faker.finance.amount(0.5, 7));\n\n    result.push(record);\n  }\n\n  return result;\n};\n\nexport default generateData;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addSorting, setSorting } from '../../actions/sortAction';\n\n\ninterface KeyboardEvent {\n  shiftKey: boolean;\n}\ninterface StyleTypes {\n  width: number;\n}\n\ninterface PropsType extends StyleTypes{\n  label: string;\n  reduxKey: string;\n  className: string;\n}\n\nconst useStyles = makeStyles({\n  root: (props: StyleTypes) => ({\n    width: props.width,\n    cursor: 'pointer',\n    userSelect: 'none',\n    outline: 'none',\n    backgroundColor: 'white',\n    '& div': {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      padding: '0 0.5rem',\n    },\n  }),\n  arrowBlock: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    alignContent: 'center',\n    fontSize: '11px',\n    color: 'lightgray',\n    marginLeft: '0.5rem',\n    '& span': {\n      height: '1em',\n      width: '1em',\n      display: 'inline-block',\n      '& svg': {\n        fill: 'currentColor',\n      },\n    },\n    '& .active': {\n      color: '#1890ff',\n    },\n  },\n});\n\nconst HeaderCell = ({\n  label, width, reduxKey, className,\n}: PropsType) => {\n  const dispatch = useDispatch();\n  const classes = useStyles({ width });\n\n  // TODO вынести во внешний файл\n  const val = [\n    'none',\n    'up',\n    'down',\n  ];\n\n  const [sortValue, setSortValue] = useState(0);\n\n  const sortState = useSelector((state: any) => state.sorting);\n\n  useEffect(() => {\n    const currentSortValue = sortState.sorting.get(reduxKey);\n    if (currentSortValue !== undefined) {\n      const reduxSortOrder = val.indexOf(currentSortValue);\n      if (reduxSortOrder !== sortValue) {\n        setSortValue(reduxSortOrder);\n      }\n    } else if (sortValue !== 0) {\n      setSortValue(0);\n    }\n  }, [sortState, reduxKey, val, sortValue]);\n\n  const clickHandler = (e: KeyboardEvent) => {\n    const action = e.shiftKey ? addSorting : setSorting;\n    let nextValue = sortValue + 1;\n    if (nextValue >= val.length) {\n      nextValue = 0;\n    }\n    setSortValue(nextValue);\n    dispatch(action({ sorting: reduxKey, order: val[nextValue] }));\n  };\n\n  return (\n    <div\n      className={`${classes.root} ${className}`}\n      onClick={clickHandler}\n      onKeyPress={clickHandler}\n      role=\"button\"\n      tabIndex={-1}\n    >\n      <div>\n        <span>{label}</span>\n        <span>\n          <span className={classes.arrowBlock}>\n            <span className={val[1] === val[sortValue] ? 'active' : undefined}>\n              <svg viewBox=\"0 0 1024 1024\" focusable=\"false\" width=\"1em\" height=\"1em\">\n                <path d=\"M858.9 689L530.5 308.2c-9.4-10.9-27.5-10.9-37 0L165.1 689c-12.2 14.2-1.2 35 18.5 35h656.8c19.7 0 30.7-20.8 18.5-35z\" />\n              </svg>\n            </span>\n            <span className={val[2] === val[sortValue] ? 'active' : undefined}>\n              <svg viewBox=\"0 0 1024 1024\" focusable=\"false\" width=\"1em\" height=\"1em\">\n                <path d=\"M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z\" />\n              </svg>\n            </span>\n          </span>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderCell;\n","import React from 'react';\n\nimport { StylesTypes } from './types';\nimport HeaderCell from '../components/Table/headerCell';\n\ninterface ColumnType {\n  id: string;\n  label: string;\n  minWidth: number;\n}\n\ninterface PropsType {\n  columns: ColumnType[];\n  classes: StylesTypes;\n  rowHeight: number;\n}\n\nconst Header = ({ columns, classes, rowHeight }: PropsType) => {\n  const translatedClasses: Record<string, string> = classes as unknown as Record<string, string>;\n  return (\n    <div style={{\n      position: 'sticky', top: '0px', zIndex: 10, height: `${rowHeight}px`,\n    }}\n    >\n      <div style={{ position: 'absolute', top: '0px' }}>\n        <div className={classes.row}>\n          {columns.map((column) => (\n            <HeaderCell\n              key={column.id}\n              label={column.label}\n              width={column.minWidth}\n              reduxKey={column.id}\n              className={translatedClasses[column.id]}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import styled from '@material-ui/core/styles/styled';\n\nconst border = '1px solid gray';\n\nconst Cell = styled('div')({\n  height: '1.5rem',\n  padding: '0 0.25rem',\n  borderRight: border,\n  borderBottom: border,\n  background: 'white',\n});\n\nexport default Cell;\n","import React from 'react';\nimport styled from '@material-ui/core/styles/styled';\n\nimport Cell from './cell';\nimport { NumberCellType } from './types';\n\nconst StyledNumberCell = styled(Cell)({\n  textAlign: 'right',\n});\n\nconst NumberCell = ({ value, className }: NumberCellType) => {\n  // TODO get locale value from redux\n  const newValue = value.toLocaleString('ru-RU');\n  return (\n    <StyledNumberCell className={className}>{newValue}</StyledNumberCell>\n  );\n};\n\nexport default NumberCell;\n","import React from 'react';\nimport styled from '@material-ui/core/styles/styled';\n\nimport Cell from './cell';\nimport { BaseCellType } from './types';\n\nconst StyledStringCell = styled(Cell)({\n  color: 'gray',\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n});\n\nconst StringCell = ({ value, className }: BaseCellType) => (\n  <StyledStringCell className={className}>{value}</StyledStringCell>\n);\nexport default StringCell;\n","import React from 'react';\n\nimport Cell from './cell';\nimport { BaseCellType } from './types';\n\nconst DateTimeCell = ({ value, className }: BaseCellType) => {\n  const dateObj = new Date(value);\n  const month = (`0${dateObj.getMonth() + 1}`).slice(-2);\n  const day = (`0${dateObj.getDate()}`).slice(-2);\n  const year = dateObj.getFullYear();\n\n\n  return (\n    <Cell className={className}>{`${year}-${month}-${day}`}</Cell>\n  );\n};\n\nexport default DateTimeCell;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Cell from './cell';\nimport { ObjectCellType } from './types';\n\nconst useStyles = makeStyles({\n  flex: {\n    width: '95%',\n    display: 'inline-flex',\n    justifyContent: 'space-between',\n  },\n});\n\nconst ObjectCell = ({ value, className }: ObjectCellType) => {\n  const classes = useStyles();\n  const newValue = typeof value.meaning === 'number' ? value.meaning.toLocaleString('ru-RU') : value;\n  return (\n    <Cell className={className}>\n      <div className={classes.flex}>\n        <div>{newValue}</div>\n        <div>{value.label}</div>\n      </div>\n    </Cell>\n  );\n};\n\nexport default ObjectCell;\n","import React from 'react';\nimport styled from '@material-ui/core/styles/styled';\n\nimport Cell from './cell';\nimport { BooleanCellType } from './types';\n\nconst StyledBooleanCell = styled(Cell)({\n  paddingTop: '0.25em',\n});\n\nconst fillColor = '#2698da';\n\nconst BooleanCell = ({ value, className }: BooleanCellType) => (\n  <StyledBooleanCell className={className}>\n    <svg viewBox=\"0 0 100 100\" width=\"1em\" height=\"1em\" fill={`${fillColor}${value ? '' : '00'}`}>\n      <circle cx=\"50\" cy=\"50\" r=\"40\" />\n    </svg>\n  </StyledBooleanCell>\n);\n\nexport default BooleanCell;\n","import React from 'react';\nimport styled from '@material-ui/core/styles/styled';\n\nimport Cell from './cell';\n\nimport { EnumCellType } from './types';\n\nconst StyledEnumCell = styled(Cell)({\n  color: 'red',\n});\n\nconst EnumCell = ({ value, className }: EnumCellType) => {\n  const maxEnumValues = 4;\n  const newValue = value.slice(0, maxEnumValues).join(', ');\n  return (\n    <StyledEnumCell className={className}>{newValue}</StyledEnumCell>\n  );\n};\n\nexport default EnumCell;\n","import React from 'react';\n\nimport Cell from './cell';\nimport { MainCellType } from './types';\n\nconst CheckboxCell = ({ className }: MainCellType) => (\n  <Cell className={className}>\n    <input type=\"checkbox\" />\n  </Cell>\n);\n\nexport default CheckboxCell;\n","import React from 'react';\n\nimport { RowType } from '../types/rowType';\nimport NumberCell from '../components/Table/Cells/numberCell';\nimport StringCell from '../components/Table/Cells/stringCell';\nimport DateTimeCell from '../components/Table/Cells/dateTimeCell';\nimport ObjectCell from '../components/Table/Cells/objectCell';\nimport BooleanCell from '../components/Table/Cells/booleanCell';\nimport EnumCell from '../components/Table/Cells/enumCell';\nimport { StylesTypes, CheckboxCallbackType } from './types';\nimport CheckboxCell from '../components/Table/Cells/CheckboxCell';\n\ninterface PropsType {\n  data: RowType;\n  classes: StylesTypes;\n  rowHeight: number;\n  checkboxCallback: ({ position, isShift }: CheckboxCallbackType) => void;\n}\n\nconst BodyRow = ({\n  data, classes, rowHeight, checkboxCallback,\n}: PropsType) => {\n  const clickHandler = (e: any) => {\n    checkboxCallback({ position: data.number, isShift: e.shiftKey });\n  };\n  return (\n    <div\n      role=\"button\"\n      style={{ position: 'relative', height: `${rowHeight}px`, userSelect: 'none' }}\n      onClick={clickHandler}\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      onKeyDown={() => {}}\n      tabIndex={-1}\n    >\n      <div style={{ position: 'absolute' }}>\n        <div className={classes.row}>\n          <CheckboxCell className={classes.check} />\n          <NumberCell value={data.number} className={classes.number} />\n          <StringCell value={data.name} className={classes.name} />\n          <DateTimeCell value={data.birth} className={classes.birth} />\n          <StringCell value={data.city} className={classes.city} />\n          <StringCell value={data.address} className={classes.address} />\n          <StringCell value={data.phoneNum} className={classes.phoneNum} />\n          <StringCell value={data.email} className={classes.email} />\n          <EnumCell value={data.do} className={classes.do} />\n          <BooleanCell value={data.bool} className={classes.bool} />\n          <ObjectCell\n            value={{ label: data.deposit.currency, meaning: data.deposit.value }}\n            className={classes.deposit}\n          />\n          <ObjectCell\n            value={{ label: data.loan.currency, meaning: data.loan.value }}\n            className={classes.loan}\n          />\n          <NumberCell value={data.interestRate} className={classes.interestRate} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BodyRow;\n","import React, { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport BodyRow from './bodyRow';\nimport { BodyPropsType, CheckboxCallbackType } from './types';\nimport { unselectRow, selectMultipleRow, selectSingleRow } from '../actions/rowsSelect';\nimport { StateType as SelectedRowType } from '../reducers/rowSelectionReducer';\n\ninterface StateType {\n  rowSelection: SelectedRowType;\n}\n\nconst BodyContainer = ({ rows, rowHeight, styles }: BodyPropsType) => {\n  const dispatch = useDispatch();\n\n  const selectedRowsState = useSelector((state: StateType) => state.rowSelection);\n\n\n  const checkboxCallback = ({ position, isShift }: CheckboxCallbackType) => {\n    if (selectedRowsState.selectedRows.has(position)) {\n      dispatch(unselectRow({ rowNumber: position }));\n    } else if (isShift) {\n      dispatch(selectMultipleRow({ rowNumber: position }));\n    } else {\n      dispatch(selectSingleRow({ rowNumber: position }));\n    }\n  };\n\n  const visibleRows = useMemo(\n    () => (\n      <>\n        {rows.map((rowData, i) => (\n          <BodyRow\n            data={rowData}\n            key={i.toString()}\n            classes={styles}\n            rowHeight={rowHeight}\n            checkboxCallback={checkboxCallback}\n          />\n        ))}\n      </ >\n    ),\n    [rows, rowHeight, styles],\n  );\n\n  return (\n    <>\n      { visibleRows }\n    </ >\n  );\n};\n\nexport default BodyContainer;\n","import React, {\n  useState, useRef, useEffect,\n} from 'react';\n\nimport Header from './header';\nimport { VirtualTablePropsType } from './types';\nimport BodyContainer from './bodyContainer';\n\n\nconst useScrollAware = (): [number, any] => {\n  const [scrollTop, setScrollTop] = useState<number>(0);\n  const ref = useRef<HTMLInputElement>();\n\n  const onScroll = (e: any) => requestAnimationFrame(() => {\n    setScrollTop(e.target.scrollTop);\n  });\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (ref && ref.current) {\n      const scrollContainer = ref.current;\n\n      setScrollTop(scrollContainer.scrollTop);\n      scrollContainer.addEventListener('scroll', onScroll);\n      return () => scrollContainer.removeEventListener('scroll', onScroll);\n    }\n  }, []);\n\n  return [scrollTop, ref];\n};\n\nconst VirtualTable = ({\n  rows, rowHeight, styles, viewportHeight, columns,\n}: VirtualTablePropsType) => {\n  const rowsCount = rows.length;\n  const totalHeight = rowsCount * rowHeight;\n  const renderAhead = 20;\n\n  const [scrollTop, ref] = useScrollAware();\n\n  let startNode = Math.floor(scrollTop / rowHeight) - renderAhead;\n  startNode = Math.max(0, startNode);\n\n  let visibleNodesCount = Math.ceil(viewportHeight / rowHeight) + 2 * renderAhead;\n  visibleNodesCount = Math.min(rowsCount - startNode, visibleNodesCount);\n\n  const offsetY = startNode * rowHeight;\n\n  const visibleRows = new Array(visibleNodesCount)\n    .fill(null)\n    .map((_, index) => rows[startNode + index]);\n\n  return (\n    <div className={styles.table} ref={ref}>\n      <Header columns={columns} classes={styles} rowHeight={rowHeight} />\n      <div\n        className=\"viewport\"\n        style={{\n          willChange: 'transform',\n          height: totalHeight,\n          position: 'relative',\n        }}\n      >\n        <div style={{\n          willChange: 'transform',\n          transform: `translateY(${offsetY}px)`,\n        }}\n        >\n          <BodyContainer rows={visibleRows} rowHeight={rowHeight} styles={styles} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VirtualTable;\n","import React from 'react';\n\nimport Header from './header';\nimport { TablePropsType } from './types';\nimport BodyContainer from './bodyContainer';\n\n\nconst SimpleTable = ({\n  rows, rowHeight, styles, columns,\n}: TablePropsType) => (\n  <div className={styles.table}>\n    <Header columns={columns} classes={styles} rowHeight={rowHeight} />\n    <BodyContainer rows={rows} rowHeight={rowHeight} styles={styles} />\n  </div>\n);\n\nexport default SimpleTable;\n","import { FilterPropsType, RowType } from './logicTypes';\n\nconst filtering = ({ filters, columns, data }: FilterPropsType) => {\n  let { stringFilter } = filters;\n  const { enumFilter } = filters;\n  const { booleanFilter } = filters;\n\n  const { stringColumns } = columns;\n  const { enumColumns } = columns;\n  const { booleanColumns } = columns;\n\n  const filterByString = (row: RowType) => {\n    let result = false;\n    for (let i = 0; i < stringColumns.length; i += 1) {\n      const column = stringColumns[i];\n      if ((row[column].toLowerCase()).includes(stringFilter)) {\n        result = true;\n        break;\n      }\n    }\n    return result;\n  };\n\n  const filterByEnum = (row: RowType) => {\n    let result = false;\n    for (let i = 0; i < enumColumns.length; i += 1) {\n      if (result) {\n        break;\n      }\n      const column = enumColumns[i];\n      const columnValue = row[column];\n      for (let j = 0; j < enumFilter.length; j += 1) {\n        if (columnValue.includes(enumFilter[j])) {\n          result = true;\n          break;\n        }\n      }\n    }\n    return result;\n  };\n\n  const filterByBoolean = (row: RowType) => {\n    let result = false;\n    for (let i = 0; i < booleanColumns.length; i += 1) {\n      const column = booleanColumns[i];\n      const columnValue = row[column];\n      if (columnValue === booleanFilter) {\n        result = true;\n        break;\n      }\n    }\n    return result;\n  };\n\n  let result = [...data];\n  if (stringColumns.length > 0 && stringFilter) {\n    stringFilter = stringFilter.toLowerCase();\n    result = result.filter(filterByString);\n  }\n  if (enumColumns.length > 0 && enumFilter.length > 0) {\n    result = result.filter(filterByEnum);\n  }\n  if (booleanColumns.length > 0 && booleanFilter !== undefined) {\n    result = result.filter(filterByBoolean);\n  }\n  return result;\n};\n\nexport default filtering;\n","import { SortingPropsType, RowType, MultipleSortingType } from './logicTypes';\n\nconst sorting = ({ sorting: sortingRules, data }: SortingPropsType) => {\n  function dynamicSort(property: string) {\n    return function sort(obj1: RowType, obj2: RowType) {\n      let result;\n      if (obj1[property] > obj2[property]) {\n        result = 1;\n      } else if (obj1[property] < obj2[property]) {\n        result = -1;\n      } else {\n        result = 0;\n      }\n      return result;\n    };\n  }\n\n  function multipleSorting({ keys, values }: MultipleSortingType) {\n    return function sort(obj1: RowType, obj2: RowType) {\n      let i = 0;\n      let result = 0;\n      const propsCount = keys.length;\n      while (result === 0 && i < propsCount) {\n        if (values[i] === 'up') {\n          result = dynamicSort(keys[i])(obj1, obj2);\n        } else if (values[i] === 'down') {\n          result = dynamicSort(keys[i])(obj2, obj1);\n        }\n        i += 1;\n      }\n      return result;\n    };\n  }\n\n  const keys = [...sortingRules.keys()];\n  const values = [...sortingRules.values()];\n  const sortedData = [...data];\n  sortedData.sort(multipleSorting({ keys, values }));\n  return sortedData;\n};\n\nexport default sorting;\n","import { FilterSortType, RowType } from './logicTypes';\nimport filtering from './filterLogic';\nimport sorting from './sortLogic';\n\nconst filterSortLogic = ({\n  filters, sorting: sortingRules, columns, data,\n}: FilterSortType): RowType[] => {\n  let result = filtering({ filters, columns, data });\n  result = sorting({ sorting: sortingRules, data: result });\n  return result;\n};\n\nexport default filterSortLogic;\n","import { makeStyles } from '@material-ui/core/styles';\n\nimport { ColumnsEnum } from '../logic/logicTypes';\n\ninterface StylePropsType {\n  gridColumnsSize: string;\n  hiddenColumn: Set<string>;\n}\n\nexport const rowHeight = 25;\n\nenum columnId {\n  CHECK = 'check',\n  NUMBER = 'number',\n  NAME = 'name',\n  BIRTH = 'birth',\n  CITY = 'city',\n  ADDRESS = 'address',\n  PHONE_NUM = 'phoneNum',\n  EMAIL = 'email',\n  DO = 'do',\n  BOOL = 'bool',\n  DEPOSIT = 'deposit',\n  LOAN = 'loan',\n  INTEREST_RATE = 'interestRate'\n}\n\nexport const useStyles = makeStyles({\n  table: {\n    width: '100%',\n    overflow: 'scroll',\n    maxHeight: '440px',\n    // TODO изменить в мерах высоты\n  },\n  row: (props: StylePropsType) => ({\n    display: 'grid',\n    gridTemplateColumns: `${props.gridColumnsSize}`,\n    '& > :nth-child(3)': {\n      position: 'sticky',\n      zIndex: 2,\n      left: 0,\n    },\n  }),\n  check: (props: StylePropsType) => ({\n    display: `${props.hiddenColumn.has(columnId.CHECK) ? 'none' : 'block'}`,\n    userSelect: 'none',\n    tabindex: -1,\n  }),\n  number: (props: StylePropsType) => ({\n    display: `${props.hiddenColumn.has(columnId.NUMBER) ? 'none' : 'block'}`,\n  }),\n  name: (props: StylePropsType) => ({\n    display: `${props.hiddenColumn.has(columnId.NAME) ? 'none' : 'block'}`,\n  }),\n  birth: (props: StylePropsType) => ({\n    display: `${props.hiddenColumn.has(columnId.BIRTH) ? 'none' : 'block'}`,\n  }),\n  city: (props: StylePropsType) => ({\n    display: `${props.hiddenColumn.has(columnId.CITY) ? 'none' : 'block'}`,\n  }),\n  address: (props: StylePropsType) => ({\n    display: `${props.hiddenColumn.has(columnId.ADDRESS) ? 'none' : 'block'}`,\n  }),\n  phoneNum: (props: StylePropsType) => ({\n    display: `${props.hiddenColumn.has(columnId.PHONE_NUM) ? 'none' : 'block'}`,\n  }),\n  email: (props: StylePropsType) => ({\n    display: `${props.hiddenColumn.has(columnId.EMAIL) ? 'none' : 'block'}`,\n  }),\n  do: (props: StylePropsType) => ({\n    display: `${props.hiddenColumn.has(columnId.DO) ? 'none' : 'block'}`,\n  }),\n  bool: (props: StylePropsType) => ({\n    display: `${props.hiddenColumn.has(columnId.BOOL) ? 'none' : 'block'}`,\n  }),\n  deposit: (props: StylePropsType) => ({\n    display: `${props.hiddenColumn.has(columnId.DEPOSIT) ? 'none' : 'block'}`,\n  }),\n  loan: (props: StylePropsType) => ({\n    display: `${props.hiddenColumn.has(columnId.LOAN) ? 'none' : 'block'}`,\n  }),\n  interestRate: (props: StylePropsType) => ({\n    display: `${props.hiddenColumn.has(columnId.INTEREST_RATE) ? 'none' : 'block'}`,\n  }),\n});\n\nexport const columns = [\n  {\n    id: columnId.CHECK,\n    label: '',\n    minWidth: 50,\n  },\n  {\n    id: columnId.NUMBER,\n    label: '№',\n    minWidth: 50,\n  },\n  {\n    id: columnId.NAME,\n    label: 'Name',\n    minWidth: 180,\n  },\n  {\n    id: columnId.BIRTH,\n    label: 'Day of Birth',\n    minWidth: 120,\n  },\n  {\n    id: columnId.CITY,\n    label: 'City, Zip code',\n    minWidth: 240,\n  },\n  {\n    id: columnId.ADDRESS,\n    label: 'Address',\n    minWidth: 240,\n  },\n  {\n    id: columnId.PHONE_NUM,\n    label: 'Phone',\n    minWidth: 160,\n  },\n  {\n    id: columnId.EMAIL,\n    label: 'Email',\n    minWidth: 220,\n  },\n  {\n    id: columnId.DO,\n    label: 'Do?',\n    minWidth: 120,\n  },\n  {\n    id: columnId.BOOL,\n    label: 'True?',\n    minWidth: 60,\n  },\n  {\n    id: columnId.DEPOSIT,\n    label: 'Deposit',\n    minWidth: 120,\n  },\n  {\n    id: columnId.LOAN,\n    label: 'Loan',\n    minWidth: 120,\n  },\n  {\n    id: columnId.INTEREST_RATE,\n    label: '%',\n    minWidth: 40,\n  },\n];\n\nexport const columnTypes = {\n  [ColumnsEnum.stringColumns]: [\n    columnId.NAME, columnId.CITY, columnId.ADDRESS, columnId.EMAIL,\n  ],\n  [ColumnsEnum.enumColumns]: [columnId.DO],\n  [ColumnsEnum.booleanColumns]: [columnId.BOOL],\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport generateData from '../logic/dataGenerator';\nimport VirtualTable from './virtualTable';\nimport SimpleTable from './simpleTable';\nimport { RowType } from '../types/rowType';\nimport filterSortLogic from '../logic/filterSortLogic';\nimport { StateType as FilterType } from '../reducers/filterReducer';\nimport { StateTypes as SortingType } from '../reducers/sortingReducer';\nimport {\n  rowHeight, useStyles, columns, columnTypes,\n} from './tableContainerValues';\nimport { TableType } from '../actions/tableTypeAction';\nimport { StateType as ColumnType } from '../reducers/columnVisibilityReducer';\n\n\nconst TableContainer = () => {\n  const [rows, setRows] = useState<RowType[]>([]);\n  const [initialRow, setInitialRows] = useState<RowType[]>([]);\n  const [visibleTable, setVisibleTable] = useState((<div />));\n  const [hiddenColumn, setHiddenColumn] = useState<Set<string>>(new Set());\n  const [gridColumnsSize, setGridColumnsSize] = useState<string>('');\n  const columnState = useSelector(\n    (state: {columnVisibility: ColumnType}) => state.columnVisibility,\n  );\n\n  useEffect(() => {\n    if (columnState.columnName !== hiddenColumn) {\n      setHiddenColumn(columnState.columnName);\n    }\n  }, [columnState, hiddenColumn]);\n\n  useEffect(() => {\n    const columnsSize = columns\n      .filter((_, index) => !columnState.columnsPosition.has(index))\n      .reduce((accumulator, column) => `${accumulator} ${column.minWidth}px`, '');\n    setGridColumnsSize(columnsSize);\n  }, [columnState]);\n\n  const classes = useStyles({ gridColumnsSize, hiddenColumn });\n\n  useEffect(() => {\n    const tableData = generateData();\n    setInitialRows(tableData);\n    setRows(tableData);\n  }, []);\n\n  const filterState = useSelector((state: {filters: FilterType}) => state.filters);\n  const { sorting: sortingState } = useSelector((state: {sorting: SortingType}) => state.sorting);\n\n  useEffect(() => {\n    const resultRows = filterSortLogic({\n      filters: filterState, sorting: sortingState, columns: columnTypes, data: initialRow,\n    });\n    const convertedRow = resultRows as RowType[];\n    setRows(convertedRow);\n  }, [filterState, sortingState, initialRow]);\n\n  const { isVirtual } = useSelector((state: {tableType: TableType}) => state.tableType);\n\n  useEffect(() => {\n    setVisibleTable(isVirtual ? (\n      <VirtualTable\n        rows={rows}\n        rowHeight={rowHeight}\n        styles={classes}\n        viewportHeight={440}\n        columns={columns}\n      />\n    ) : (\n      <SimpleTable\n        rows={rows}\n        rowHeight={rowHeight}\n        styles={classes}\n        columns={columns}\n      />\n    ));\n  }, [isVirtual, classes, rows]);\n  return visibleTable;\n};\n\nexport default TableContainer;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface PropsType {\n  callback: (value: boolean) => void;\n  isChecked: boolean;\n}\n\nconst useStyles = makeStyles({\n  switch: {\n    position: 'relative',\n    display: 'inline-block',\n    width: '40px',\n    height: '21px',\n\n  },\n  slider: {\n    position: 'absolute',\n    cursor: 'pointer',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#ccc',\n    borderRadius: '34px',\n    transition: '.4s',\n\n    '&:before': {\n      position: 'absolute',\n      content: '\"\"',\n      height: '15px',\n      width: '15px',\n      left: '4px',\n      bottom: '3px',\n      backgroundColor: 'white',\n      borderRadius: '50%',\n      transition: '.4s',\n    },\n  },\n  input: {\n    opacity: 0,\n    width: 0,\n    height: 0,\n    '&:checked + $slider': {\n      backgroundColor: '#2196F3',\n    },\n    '&:focus $slider': {\n      boxShadow: '0 0 1px #2196F3',\n    },\n    '&:checked + $slider:before': {\n      transform: 'translateX(16px)',\n    },\n  },\n});\n\nconst Switcher = ({ callback, isChecked }: PropsType) => {\n  const classes = useStyles();\n  const checkHandler = () => {\n    callback(!isChecked);\n  };\n\n  return (\n    <label className={classes.switch}>\n      <input className={classes.input} type=\"checkbox\" checked={isChecked} onChange={checkHandler} />\n      <span className={classes.slider} />\n    </label>\n  );\n};\n\nexport default Switcher;\n","import React from 'react';\n\ninterface PropsType {\n  label: string;\n  id: string;\n  isChecked: string;\n  callback: (value: string) => void;\n}\n\nconst RadioButton = ({\n  label, id, isChecked, callback,\n}: PropsType) => (\n  <label>\n    <input type=\"radio\" value=\"option1\" checked={isChecked === id} onChange={() => callback(id)} />\n    {label}\n  </label>\n);\n\nexport default RadioButton;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StateType as FilterType } from '../reducers/filterReducer';\n\nimport RadioButton from '../components/radiobutton';\nimport { removeBooleanFilter, addBooleanFilter } from '../actions/filterAction';\n\nconst BooleanFilter = () => {\n  enum radioStates {\n    NONE = 'none',\n    TRUE = 'true',\n    FALSE = 'false',\n  }\n\n  const dispatch = useDispatch();\n\n  const radioCallback = (id: string) => {\n    if (id === radioStates.NONE) {\n      dispatch(removeBooleanFilter());\n    } else if (id === radioStates.TRUE) {\n      dispatch(addBooleanFilter({ filterValue: true }));\n    } else {\n      dispatch(addBooleanFilter({ filterValue: false }));\n    }\n  };\n\n  const { booleanFilter: booleanFilterState } = useSelector(\n    (state: {filters: FilterType}) => state.filters,\n  );\n\n  const [filterChecked, setFilterChecked] = useState(radioStates.NONE);\n\n  useEffect(() => {\n    if (booleanFilterState === undefined) {\n      setFilterChecked(radioStates.NONE);\n    } else if (booleanFilterState) {\n      setFilterChecked(radioStates.TRUE);\n    } else {\n      setFilterChecked(radioStates.FALSE);\n    }\n  }, [booleanFilterState, radioStates]);\n\n  return (\n    <>\n      <RadioButton label=\"Reset\" id={radioStates.NONE} isChecked={filterChecked} callback={radioCallback} />\n      <RadioButton label=\"True\" id={radioStates.TRUE} isChecked={filterChecked} callback={radioCallback} />\n      <RadioButton label=\"False\" id={radioStates.FALSE} isChecked={filterChecked} callback={radioCallback} />\n    </>\n  );\n};\n\nexport default BooleanFilter;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\n\nimport { enumData } from '../logic/dataGenerator';\nimport { addEnumFilter } from '../actions/filterAction';\nimport { StateType as FilterType } from '../reducers/filterReducer';\n\ninterface OptionType {\n  value: string;\n  label: string;\n}\n\nconst animatedComponents = makeAnimated();\n\nconst SelectBlock = () => {\n  const dispatch = useDispatch();\n  const [selected, setSelected] = useState<OptionType[]>([]);\n  const options = enumData.map((value) => ({ value, label: value }));\n\n  const filterState = useSelector((state: {filters: FilterType}) => state.filters);\n\n  useEffect(() => {\n    const stateValue = filterState.enumFilter.map((value) => ({ value, label: value }));\n    if (JSON.stringify(selected) !== JSON.stringify(stateValue)) {\n      setSelected(stateValue);\n    }\n  }, [filterState, selected]);\n\n  const onChange = (selectedOptions: any) => {\n    setSelected(selectedOptions);\n    const enumFilters = selectedOptions.map((option: OptionType) => option.value);\n    dispatch(addEnumFilter({ filterValue: enumFilters }));\n  };\n\n  return (\n    <Select\n      options={options}\n      value={selected}\n      components={animatedComponents}\n      onChange={onChange}\n      isMulti\n    />\n  );\n};\n\nexport default SelectBlock;\n","import React from 'react';\n\ninterface PropsType {\n  label: string;\n  checkedLabels: string[];\n  number: number;\n  callback: ({ value, index }: { value: string; index: number }) => void;\n}\n\nconst Checkbox = ({\n  label, checkedLabels, number, callback,\n}: PropsType) => (\n  <label>\n    {`${label}:`}\n    <input\n      type=\"checkbox\"\n      checked={!checkedLabels.includes(label)}\n      id={label}\n      onChange={() => callback({ value: label, index: number })}\n    />\n  </label>\n);\n\nexport default Checkbox;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Switcher from '../components/switcher';\nimport { setTableType, TableType } from '../actions/tableTypeAction';\nimport BooleanFilter from './booleanFilter';\nimport { addStringFilter, resetFilter } from '../actions/filterAction';\nimport { StateType as FilterType } from '../reducers/filterReducer';\nimport SelectBlock from '../components/selectBlock';\nimport { columns } from './tableContainerValues';\nimport Checkbox from '../components/checkbox';\nimport { hideColumn, showColumn } from '../actions/columnVisibility';\n\n\nconst FilterContainer = () => {\n  const dispatch = useDispatch();\n\n  const [stringFilter, setStringFilter] = useState('');\n  const [isVirtualTable, setIsVirtualTable] = useState(false);\n  const [checkedColumns, setCheckedColumns] = useState<string[]>([]);\n\n  const filterState = useSelector((state: {filters: FilterType}) => state.filters);\n  const tableTypeState = useSelector((state: {tableType: TableType}) => state.tableType);\n\n  useEffect(() => {\n    if (stringFilter !== filterState.stringFilter) {\n      setStringFilter(filterState.stringFilter);\n    }\n  }, [filterState, stringFilter]);\n  useEffect(() => {\n    if (isVirtualTable !== tableTypeState.isVirtual) {\n      setIsVirtualTable(tableTypeState.isVirtual);\n    }\n  }, [tableTypeState, isVirtualTable]);\n\n\n  const isVirtualTableCallback = (value: boolean) => {\n    setIsVirtualTable(value);\n    dispatch(setTableType({ value }));\n  };\n  const stringFilterHandler = (value: string) => {\n    setStringFilter(value);\n    dispatch(addStringFilter({ filterValue: value }));\n  };\n  const resetFilterHandler = () => {\n    dispatch(resetFilter());\n  };\n  const checkboxCallback = ({ value, index }: { value: string; index: number }) => {\n    let newCheckedColumnsState = [...checkedColumns];\n    if (!newCheckedColumnsState.includes(value)) {\n      newCheckedColumnsState.push(value);\n      dispatch(hideColumn({ columnPosition: index, columnName: value }));\n    } else {\n      newCheckedColumnsState = checkedColumns.filter((item) => item !== value);\n      dispatch(showColumn({ columnPosition: index, columnName: value }));\n    }\n    setCheckedColumns(newCheckedColumnsState);\n  };\n\n\n  return (\n    <div>\n      <div>\n        <label>\n          <Switcher callback={isVirtualTableCallback} isChecked={isVirtualTable} />\n          {' Is Virtual Table?'}\n        </label>\n      </div>\n      <div>\n        <label>\n          Boolean Filter\n          <BooleanFilter />\n        </label>\n      </div>\n      <div>\n        String Filter\n        <input type=\"text\" name=\"stringFilter\" value={stringFilter} onChange={(e) => stringFilterHandler(e.target.value)} />\n      </div>\n      <div>\n        <SelectBlock />\n      </div>\n      <div>\n        <button type=\"button\" onClick={resetFilterHandler}>Clear Filters</button>\n      </div>\n      <div>\n        {columns.map((column, index) => (\n          <Checkbox\n            key={column.id}\n            label={column.id}\n            checkedLabels={checkedColumns}\n            number={index}\n            callback={checkboxCallback}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FilterContainer;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './App.css';\nimport store from './store';\nimport TableContainer from './containers/tableContainer';\nimport FilterContainer from './containers/filterContainer';\n\nconst useStyles = makeStyles({\n  main: {\n    display: 'grid',\n    gridTemplateColumns: '500px auto',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <main className={classes.main}>\n          <FilterContainer />\n          <TableContainer />\n        </main>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// redux-devtools not work with Set and Map\n(Set.prototype as any).toJSON = function setProt() {\n  return Array.from(this);\n};\n(Map.prototype as any).toJSON = function mapProt() {\n  return JSON.parse(JSON.stringify([...this]));\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}